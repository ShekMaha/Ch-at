Project Marking Scheme  (20%)

Readme file (10%)
: 3 / 4
    - Design description is clear and helpful
    - Instructions on how to connect to app, or install and run are provided
    - Description of anything not complete or not working
    - Description of any enhancements
    - Reasonably well-written

Required features  (40%)
: 16 / 16
    - Graders will use some discretion about required features, remembering that the focus of the course is on web programming skills (JavaScript, AJAX, DOM manipulation, Data management)
    - user profiles, authentication
    - reasonable data set
    - admin functionality
    - sufficient user interaction
    - search (depends on application)
    - several different views

Architecture (15%)
: 5 / 6
    - follows a standard architecture
    - code is well-organized, readable, and documented
    - interface to front end (RESTful API?) is clear

Database (approximately 7%)
: 3 / 3
    - Data is managed well
    - Interface to database is clear

User interface/Front end (10%)
: 3 / 4
    - A plain look and feel is fine
    - Emphasis here is on organization of UI, DOM manipulation, use of forms.

Hosting/Deployment(approximately 3%)
: 1 / 1
    - Hosted for easy use by graders
    - If not hosted, instructions for the graders on how to set up and run are clear an easy to follow

Creativity/Additional features(15%)
: 5 / 6
    - As discussed in class and on the bulletin boards this category is broad ranging.
    - Possible additional features include:
        - good testing
        - responsive UI
        - significant UI
        - interesting back end algorthms
        - preventative security measures
        - anything that particularly impresses the graders (remembering that students new to web programming this term can also do impressive work)

Total:
: 36 / 40

Feedback:
- Repository contains a lot of junk files (Mongo, WiredTiger, etc.) -- should use .gitignore properly
- No setup instructions in README
- Hosted version URL not included in README (but mentioned in demo)
- Some fields say "undefined" when editing profile
- Additional: integration with Cobalt
- Console shows errors with Bootstrap requiring jQuery
- Doesn't handle network changes/disconnects very gracefully for socket.io (although not a big problem)
- Might have been nice to separate out some of the front-end scripts a bit more (main.js contains a lot of the logic)
- Some form input patterns (`pattern=".+"`) aren't particularly useful -- this is basically the same as `required`
- Should try to stay away from doing styles inline in HTML (separation of concerns, specificity)
- Consider looking into EJS partials -- could have been helpful for some common template stuff (<head> contents, header/footer UI)
